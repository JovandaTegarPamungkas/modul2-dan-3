class Mahasiswa implements Comparable<Mahasiswa> {
  String nrp;
  String nama;

  Mahasiswa(this.nrp, this.nama);

  @override
  int compareTo(Mahasiswa other) {
    // Membandingkan berdasarkan nrp
    return nrp.compareTo(other.nrp);
  }

  @override
  String toString() {
    return 'NRP: $nrp, Nama: $nama';
  }
}

void insertionSort<T extends Comparable<T>>(List<T> arr) {
  for (int i = 1; i < arr.length; i++) {
    T key = arr[i];
    int j = i - 1;
    
    // Geser elemen yang lebih besar ke kanan
    while (j >= 0 && arr[j].compareTo(key) > 0) {
      arr[j + 1] = arr[j];
      j--;
    }
    arr[j + 1] = key;
  }
}

void display<T>(List<T> data) {
  for (var item in data) {
    print(item);
  }
  print('');
}

void main() {
  // Membuat daftar mahasiswa
  List<Mahasiswa> daftarMahasiswa = [
    Mahasiswa("02", "Budi"),
    Mahasiswa("01", "Andi"),
    Mahasiswa("04", "Dina"),
    Mahasiswa("03", "Candra")
  ];

  print("Data sebelum diurutkan:");
  display(daftarMahasiswa);

  // Mengukur waktu eksekusi
  var waktuMulai = DateTime.now();
  insertionSort(daftarMahasiswa);
  var waktuSelesai = DateTime.now();

  print("Data setelah diurutkan:");
  display(daftarMahasiswa);
  print('Waktu eksekusi: \${waktuSelesai.difference(waktuMulai).inMilliseconds} ms');
}
